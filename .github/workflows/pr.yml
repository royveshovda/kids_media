name: PR Tests

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  pr-tests:
    runs-on: ubuntu-latest
    name: PR Validation
    env:
      MIX_ENV: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.1'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get --only test

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Check code formatting
      run: mix format --check-formatted

    - name: Run tests
      run: mix test --color
      env:
        UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}

    - name: Run Credo
      run: mix credo --strict
      continue-on-error: true

    - name: Run Sobelow security check
      run: mix sobelow --skip
      continue-on-error: true

  assets-check:
    runs-on: ubuntu-latest
    name: Assets Check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.1'

    - name: Install dependencies
      run: mix deps.get

    - name: Setup and build assets
      run: |
        mix assets.setup
        mix assets.build

    - name: Verify assets are buildable
      run: |
        # Ensure assets can be built without errors
        mix assets.build --minify
        echo "âœ… Assets build successfully"
